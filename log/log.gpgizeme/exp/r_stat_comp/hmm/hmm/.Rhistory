install.packages('HMM')
install.packages('depmixS4')
?initHMM
library(HMM)
?initHMM
ls()
matrix(c(.8, .2, .2, .8), 2)
matrix(c(.11, .12, .21, .22), 2)
matrix(c(.11, .21, .12, .22), 2)
matrix(c(.11, .21, .12, .22), 3)
matrix(c(.11, .21, .12, .22), 1)
matrix(c(.11, .21, .12, .22), 4)
matrix(c(.11, .21, .31, .12, .22, .32), 3)
hmm
hmm <- initHMM(c("A", "B"), c("L", "R"), transProbs = matrix(c(.8, .2, .2, .8), 2), emissionProbs = matrix(c(.6, .4, .4, .6), 2))
hmm
print(hmm)
observations = c("L", "L", "R", "R")
observations
logbp <- backward(hmm, observations)
logbp
?exp
exp(2)
exp(1)
exp(logbp)
logbp
obs1 
obs1 = c("L")
obs1
obs2 = c("L", "L")
obs2
obs3 = c("L", "L", "R")
obs4 = c("L", "L", "R", "R")
backward(hmm, obs4)
exp(backward(hmm, obs4))
exp(backward(hmm, obs3))
exp(backward(hmm, obs2))
exp(backward(hmm, obs1))
dishonestCasino()
l
sink()
hmm <- initHMM(c("A", "B"), c("L", "R"), transProbs = matrix(c(.8, .2, .2, .8), 2), emissionProbs = matrix(c(.6, .4, .4, .6), 2))
hmm
obs4
obs3
obs2
obs1
fp_log <- forward(hmm, obs4)
fp_log
exp(fp_log)
fp <- exp(forward(hmm, obs4))
fp
fp <- exp(forward(hmm, obs3))
fp
fp <- exp(forward(hmm, obs2))
fp
fp <- exp(forward(hmm, obs1))
# Initial HMM 
hmm = initHMM(c("A","B"),c("L","R"), transProbs=matrix(c(.9,.1,.1,.9),2), emissionProbs=matrix(c(.5,.51,.5,.49),2))
print(hmm)
# Sequence of observation
a = sample(c(rep("L",100),rep("R",300)))
b = sample(c(rep("L",300),rep("R",100)))
observation = c(a,b)
# Baum-Welch
bw = baumWelch(hmm,observation,10)
print(bw$hmm)
hmm
observation
a
b
?c
bw
hmm
hmm
bw
bw
bw$hmm
hmm = initHMM(c("A","B"), c("L","R"), transProbs=matrix(c(.8,.2,.2,.8),2), emissionProbs=matrix(c(.6,.4,.4,.6),2))
print(hmm)
# Sequence of observations
observations = c("L","L","R","R")
# Calculate posterior probablities of the states
posterior = posterior(hmm,observations)
print(posterior)
print(posterior)
print(hmm)
print(posterior)
hmm
simHMM(hmm, 100)
posterior
viterbi 
viterbi <- viterbi(hmm, observation)
viterbi
observation
viterbi
observation
# Initial HMM
hmm = initHMM(c("A","B"),c("L","R"), transProbs=matrix(c(.9,.1,.1,.9),2), emissionProbs=matrix(c(.5,.51,.5,.49),2))
print(hmm)
# Sequence of observation
a = sample(c(rep("L",100),rep("R",300)))
b = sample(c(rep("L",300),rep("R",100)))
observation = c(a,b)
# Viterbi-training
vt = viterbiTraining(hmm,observation,10)
print(vt$hmm)
vt
bw
vt$hmm
bw$hmm
hmm$hmm
hmm
hmm-1 
hmm_1 
library(HMM)
?initHMM
ls()
obs1
obs2
obs3
obs4
a
b
p b
p
hmm_1 <- initHMM(
c("A", "B"),
c("L", "R"),
transProbs=matrix(c(.8, .2, .2, .8), 2),
emissionProbs = matrix(c(.6, .4, .4, .6), 2)
)
hmm_1
obs_1
obs_1 <- c("L", "L
", "R", "R")
obs_1
obs_1 <- c("L", "L", "R", "R")
obs_1
bp <- exp(backward(hmm_1, obs_1))
bp
dishonestCasino
mycasino <- function() {
ls()
}
mycasino
mycasino
mycasino()
dishonestCasino
