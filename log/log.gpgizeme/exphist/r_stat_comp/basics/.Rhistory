example(read.tables)
example(read.table)
help(read.table)
help(read.table)
help (read.table)
l
pwd
shell
shell()
read.table(filein)
read.table('filein')
read.table('filein')
read.table('filein.L20')
read.table('filein.L20', col.names=c("timestamp", "address"))
read.table('filein.L20', col.names=c("timestamp", "address"), sep=",")
read.table('filein.L20', col.names=c("timestamp", "address"), sep=",")
read.table('filein.L20', col.names=c("timestamp", "address"))
read.table('filein.L20', col.names=c("timestamp", "address"), sep=",")
datain <- read.table('filein.L20', col.names=c("timestamp", "address"), sep=",")
datain
datain[0]
datain[1]
datain[2]
datain[2,1]
datain[1,2]
datain[1,1]
datain[2,1]
typeof(datain)
unlist(datain)
typeof(unlist(datain))
datain_unlisted <- unlist(datain)
datain_unlisted
datain_unlisted[0]
datain_unlisted[1]
datain_unlisted[2]
datain_unlisted[3]
datain_unlisted[20]
datain_unlisted[21]
datain_unlisted[22]
datain_unlisted[1,1]
datain
!ls
!shell
help(shell)
??shell
??escape
datain <- read.table('filein.L20', col.names=c("timestamp", "address"), sep=",");
datain
library(arules);
library(e1071); ?svm;
data <- list(
c("a", "b", "c"),
c("a", "b")
)
typeof(data)
typeof(datain)
data
datain
t <- as(datain, "transactions");
typeof(data)
typeof(data[1])
typeof(data[1,1])
data[1,1]
data[1]
?write.table
datain
dataout 
dataout <- datain
dataout
dataout + 1
dataout % 20
dataout / 20
?oper
?operator
?operators
??operators
??base
??base+
??base
??operators
?+
??base
??operators
?base::+
?base::+
?base
?base+
?"base::+"
??"base::+"
dataout
dataout %% 2
dataout %% 8
dataout %% 16
dataout %% 4
dataout %% 10
dataout %% 20
dataout %% 10
dataout %% 10
dataout <- datain %% 10
dataout
write.table(dataout, file="fileout.L20", append=F, quote=T, sep=",")
write.table(dataout, file="fileout.L20", append=F, quote=T, sep=" , ")
write.table(dataout, file="fileout.L20", append=F, quote=T, sep=" , ", row.names=F)
dataout
unlist(dataout)
?unlist
unlist(dataout, use.names=F)
cat datain
datain
q
dataout
dataout_ul
dataout_ul <- unlist(dataout, use.names=F)
dataout_ul
mat.or.vec
?mat.or.vec
mat.or.vec(4,5)
?mat
?mat.or.vec
??matrix
l
write.table(dataout_ul, file="fileout", append=F, quote=T, sep=" , ", row.names=F, col.names=T)
read.table(fileout)
read.table('fileout')
read.delim
?read.delim
?read.fwf
?scan
scan(file="fileout", strip.white=T)
?scan
scan(file="fileout", strip.white=T, what=character)
?scan
scan(file="fileout", strip.white=T, what=list)
scan(file="fileout", strip.white=T, what='list')
scan(file="fileout", strip.white=T, what='character')
datain_char <- scan(file="fileout", strip.white=T, what='character')
typeof(datain_char)
datain_char
datain_list <- scan(file="fileout", strip.white=T, what='list')
typeof(datain_list)
datain_list
?scan
datain
dataout
datain
dataout <- datain %% 13
dataout
unlist(dataout, use.names=F)
dataout_ul <- unlist(dataout, use.names=F)
write.table(dataout_ul, file="d010", row.names=F, col.names=F)
scan(file="d010")
scan(file="d010", what="char")
scan(file="d010", what="char", sep=";")
scan(file="d010", what="char", sep=";", strip.white=T)
scan(file="d010", what="char", sep=";\n", strip.white=T)
scan(file="d010", what="char", sep="\n", strip.white=T)
scan(file="d010", what="char", sep="\n", strip.white=T)
data
c(1, 3, 2)
c("1", "3", "2")
?list
?source
source('data_set.R')
data_1
data_2
data_2
t <- as(data_2, "transactions")
data_2
t <- as(data_1, "transactions")
library(arules)
t <- as(data_2, "transactions")
t
source('data_set.R')
data_3
?eclat
library(arules)
t <- as(data_3, "transactions")
?scan
